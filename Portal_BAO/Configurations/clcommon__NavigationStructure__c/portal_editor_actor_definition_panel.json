{
     "attributes": {
          "type": "clcommon__NavigationStructure__c"
     },
     "Name": "portal_editor_actor_definition_panel",
     "clcommon__Allow_Guest_User_Access__c": false,
     "clcommon__Description__c": null,
     "clcommon__Is_Editor_JSON__c": true,
     "clcommon__Is_Template__c": false,
     "clcommon__Related_Configuration_Mapping__c": null,
     "clcommon__Skip_Record_Access_For_Internal_Users__c": false,
     "clcommon__Unique_Name__c": "portal_editor_actor_definition_panel",
     "clcommon__data__c": {
          "start": "ActorDefinitionPage",
          "stages": {
               "ActorDefinitionPage": {
                    "layout": {
                         "name": "ActorDefinitionContainer",
                         "children": [
                              {
                                   "name": "ActorDefinitionContent",
                                   "children": [
                                        {
                                             "name": "ActorDefinition"
                                        },
                                        {
                                             "name": "DivisionLayout"
                                        },
                                        {
                                             "name": "DivisionLayoutOrientation"
                                        },
                                        {
                                             "name": "ComponentConfiguration"
                                        },
                                        {
                                             "name": "ContentConfiguration"
                                        },
                                        {
                                             "name": "ContainerConfiguration"
                                        },
                                        {
                                             "name": "ContainerChildren"
                                        },
                                        {
                                             "name": "DivisionBranding"
                                        },
                                        {
                                             "name": "ListViewBranding"
                                        },
                                        {
                                             "name": "ComponentBranding"
                                        },
                                        {
                                             "name": "StaticContentBranding"
                                        },
                                        {
                                             "name": "TabsPrimaryHorizontalBranding"
                                        },
                                        {
                                             "name": "TabsPrimaryVerticalBranding"
                                        },
                                        {
                                             "name": "TabsSecondaryBranding"
                                        },
                                        {
                                             "name": "StepsBranding"
                                        }
                                   ]
                              },
                              {
                                   "name": "ActorDefinitionErrorPanel"
                              },
                              {
                                   "name": "ActorDefinitionButtonPanel"
                              },
                              {
                                   "name": "ActorPopup"
                              },
                              {
                                   "name": "ColorPalettePopup"
                              },
                              {
                                   "name": "FontFamilyPopup"
                              }
                         ]
                    }
               }
          },
          "actors": {
               "ActorDefinitionErrorPanel": {
                    "category": "component",
                    "type": "base-panel"
               },
               "ActorDefinitionButtonPanel": {
                    "category": "component",
                    "type": "base-panel",
                    "appearance": {
                         "expansionBottom": "normal"
                    },
                    "componentActions": [
                         {
                              "name": "delete",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-trash-o\"/>",
                                   "style": "warning",
                                   "render": "$state(ActorDefinition).attr(originalCategory); != \"division\" and $state(ActorDefinition).attr(originalCategory); != undefined and $state(ActorDefinition).attr(originalCategory); != null"
                              },
                              "confirmation": {
                                   "type": "prompt",
                                   "title": "Are you sure?",
                                   "content": "<p>Actors cannot be restored after being deleted.</p><p>Are you sure that you want to delete this actor?</p>",
                                   "showConfirmButtons": true,
                                   "confirmText": "Yes. Delete this actor.",
                                   "cancelText": "No. Keep this actor."
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "updates": [
                                        {
                                             "name": "$nav.reloads.add;",
                                             "value": [
                                                  "ActorDefinition",
                                                  "DivisionLayout",
                                                  "DivisionLayoutOrientation",
                                                  "ComponentConfiguration",
                                                  "ContentConfiguration",
                                                  "ContainerConfiguration",
                                                  "ContainerChildren",
                                                  "DivisionBranding",
                                                  "ListViewBranding",
                                                  "ComponentBranding",
                                                  "StaticContentBranding",
                                                  "TabsPrimaryHorizontalBranding",
                                                  "TabsPrimaryVerticalBranding",
                                                  "TabsSecondaryBranding",
                                                  "StepsBranding"
                                             ]
                                        }
                                   ],
                                   "executions": [
                                        {
                                             "name": "$deleteCurrentActor;",
                                             "value": []
                                        },
                                        {
                                             "name": "$closePanel;",
                                             "value": [
                                                  "editActor",
                                                  "ActorDefinitionErrorPanel"
                                             ]
                                        }
                                   ]
                              }
                         },
                         {
                              "name": "apply",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "Apply",
                                   "style": "primary"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$applyActorDefinition;",
                                             "value": [
                                                  "portal_editor_actor_definition_panel",
                                                  {
                                                       "actorDefinition": "ActorDefinition",
                                                       "divisionLayout": "DivisionLayout",
                                                       "divisionLayoutOrientation": "DivisionLayoutOrientation",
                                                       "componentConfiguration": "ComponentConfiguration",
                                                       "contentConfiguration": "ContentConfiguration",
                                                       "containerConfiguration": "ContainerConfiguration",
                                                       "containerChildren": "ContainerChildren",
                                                       "divisionBranding": "DivisionBranding",
                                                       "listViewBranding": "ListViewBranding",
                                                       "componentBranding": "ComponentBranding",
                                                       "staticContentBranding": "StaticContentBranding",
                                                       "tabsPrimaryHorizontalBranding": "TabsPrimaryHorizontalBranding",
                                                       "tabsPrimaryVerticalBranding": "TabsPrimaryVerticalBranding",
                                                       "tabsSecondaryBranding": "TabsSecondaryBranding",
                                                       "stepsBranding": "StepsBranding"
                                                  },
                                                  {
                                                       "blankDivisionChildName": "Actor name cannot be blank.",
                                                       "blankDivisionWidth": "Actor width cannot be blank with horizontal layout.",
                                                       "duplicateActorName": "The actor name has been taken.",
                                                       "blankContainerTitleAndChildName": "Title and actor name cannot be blank.",
                                                       "noTitleAndChildName": "There is no title and child actor.",
                                                       "sameAsTabsName": "Actor name cannot be same as the name of the tabs.",
                                                       "sameAsStepsName": "Actor name cannot be same as the name of the steps.",
                                                       "sameAsAccordionName": "Actor name cannot be same as the name of the accordion.",
                                                       "sameTabNames": "Name Should be Unique"
                                                  },
                                                  "ActorDefinitionErrorPanel",
                                                  "ActorDefinition"
                                             ]
                                        }
                                   ],
                                   "updates": [
                                        {
                                             "name": "$nav.reloads.add;",
                                             "value": [
                                                  "DivisionBranding",
                                                  "ListViewBranding",
                                                  "ComponentBranding",
                                                  "StaticContentBranding",
                                                  "TabsPrimaryHorizontalBranding",
                                                  "TabsPrimaryVerticalBranding",
                                                  "TabsSecondaryBranding",
                                                  "StepsBranding"
                                             ]
                                        }
                                   ]
                              }
                         },
                         {
                              "name": "close",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-times\"/>",
                                   "style": "secondary"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "updates": [
                                        {
                                             "name": "$nav.reloads.add;",
                                             "value": [
                                                  "ActorDefinition",
                                                  "DivisionLayout",
                                                  "DivisionLayoutOrientation",
                                                  "ComponentConfiguration",
                                                  "ContentConfiguration",
                                                  "ContainerConfiguration",
                                                  "ContainerChildren",
                                                  "DivisionBranding",
                                                  "ListViewBranding",
                                                  "ComponentBranding",
                                                  "StaticContentBranding",
                                                  "TabsPrimaryHorizontalBranding",
                                                  "TabsPrimaryVerticalBranding",
                                                  "TabsSecondaryBranding",
                                                  "StepsBranding"
                                             ]
                                        }
                                   ],
                                   "executions": [
                                        {
                                             "name": "$closePanel;",
                                             "value": [
                                                  "editActor",
                                                  "ActorDefinitionErrorPanel"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "ActorDefinition": {
                    "category": "component",
                    "type": "detail-view",
                    "property": {
                         "structureName": "portal_editor_actor_definition_general",
                         "dataObject": "$editModeActorDefinitionGeneral;"
                    },
                    "appearance": {
                         "editable": true,
                         "renderFields": {
                              "isLayout": false,
                              "originalCategory": false,
                              "divisionType": "$this.attr(isLayout);",
                              "type": "(not $this.attr(isLayout);) and $this.attr(originalCategory); == \"division\"",
                              "componentType": "$this.attr(originalCategory); ==\"component\"",
                              "contentType": "$this.attr(originalCategory); ==\"content\"",
                              "containerType": "$this.attr(originalCategory); ==\"container\""
                         },
                         "editableFields": {
                              "name": "(not $this.attr(isLayout);)",
                              "divisionType": false
                         }
                    },
                    "generalHandlers": {
                         "fieldChange": {
                              "type": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$clearActorDefinitionError;",
                                             "value": [
                                                  "ActorDefinitionErrorPanel"
                                             ]
                                        }
                                   ]
                              }
                         }
                    }
               },
               "DivisionLayout": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_division_layout",
                         "dataObject": "$editModeDivisionChildren;"
                    },
                    "appearance": {
                         "render": "$state(ActorDefinition).attr(type); == \"division\"",
                         "editable": true,
                         "new": true,
                         "fieldColumns": 2,
                         "spanFields": [
                              "actorName"
                         ],
                         "noLabelFields": [
                              "actorName",
                              "actorTypeListView",
                              "actorTypeQueueView",
                              "actorTypeCardView",
                              "actorTypeDetailView",
                              "actorTypePanel",
                              "actorTypeDataModel",
                              "actorTypeStaticContent",
                              "actorTypePageInclude",
                              "actorTypeTabs",
                              "actorTypeSteps",
                              "actorTypeAccordion"
                         ],
                         "renderFields": {
                              "actorType": false,
                              "actorTypeListView": "$this.attr(actorType); == \"list-view\"",
                              "actorTypeQueueView": "$this.attr(actorType); == \"queue-view\"",
                              "actorTypeCardView": "$this.attr(actorType); == \"card-view\"",
                              "actorTypeDetailView": "$this.attr(actorType); == \"detail-view\"",
                              "actorTypePanel": "$this.attr(actorType); == \"base-panel\"",
                              "actorTypeDataModel": "$this.attr(actorType); == \"data-model\"",
                              "actorTypeStaticContent": "$this.attr(actorType); == \"static-content\"",
                              "actorTypePageInclude": "$this.attr(actorType); == \"page-include\"",
                              "actorTypeTabs": "$this.attr(actorType); == \"tabs\"",
                              "actorTypeSteps": "$this.attr(actorType); == \"steps\"",
                              "actorTypeAccordion": "$this.attr(actorType); == \"accordion\""
                         },
                         "editableFields": {
                              "actorName": "$this.attr(actorType); == \"\" or $this.attr(actorType); == undefined or $this.attr(actorType); == null",
                              "actorTypeListView": false,
                              "actorTypeQueueView": false,
                              "actorTypeCardView": false,
                              "actorTypeDetailView": false,
                              "actorTypePanel": false,
                              "actorTypeDataModel": false,
                              "actorTypeStaticContent": false,
                              "actorTypePageInclude": false,
                              "actorTypeTabs": false,
                              "actorTypeSteps": false
                         },
                         "expansionTop": "normal",
                         "title": "Layout"
                    },
                    "componentActions": [
                         {
                              "name": "add",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-plus-circle\"></span>",
                                   "position": "top-right"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "cruds": [
                                        {
                                             "method": "insert",
                                             "source": "$state(DivisionLayout);",
                                             "options": {
                                                  "structureName": "portal_editor_division_layout"
                                             }
                                        }
                                   ]
                              }
                         }
                    ],
                    "recordActions": [
                         {
                              "name": "remove",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-times\"></span>",
                                   "position": "top-right"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "cruds": [
                                        {
                                             "method": "remove",
                                             "source": "$state(DivisionLayout);",
                                             "value": {
                                                  "id": "$this.attr(id);"
                                             }
                                        }
                                   ]
                              }
                         },
                         {
                              "name": "searchActor",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-search\"></span>",
                                   "render": "$this.attr(actorType); == \"\" or $this.attr(actorType); == undefined or $this.attr(actorType); == null"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$openPopup;",
                                             "value": [
                                                  "ActorPopup",
                                                  "DivisionLayout",
                                                  [
                                                       "actorName",
                                                       "actorType"
                                                  ]
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "DivisionLayoutOrientation": {
                    "category": "component",
                    "type": "base-panel",
                    "property": {
                         "structureName": "portal_editor_division_layout_orientation",
                         "dataObject": "$editModeDivisionDirection;"
                    },
                    "appearance": {
                         "render": "$state(ActorDefinition).attr(type); == \"division\" and $state(DivisionLayout).count(); > 1",
                         "editable": true
                    }
               },
               "ComponentConfiguration": {
                    "category": "component",
                    "type": "detail-view",
                    "property": {
                         "structureName": "portal_editor_component_configuration",
                         "dataObject": "$editModeComponentConfiguration;"
                    },
                    "appearance": {
                         "render": "($state(ActorDefinition).attr(originalCategory); == \"component\" and $state(ActorDefinition).attr(componentType); != \"data-model\") or $state(ActorDefinition).attr(type); == \"list-view\" or $state(ActorDefinition).attr(type); == \"queue-view\" or $state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(type); == \"detail-view\" or $state(ActorDefinition).attr(type); == \"base-panel\"",
                         "editable": true,
                         "renderSections": {
                              "expansion": "($state(ActorDefinition).attr(originalCategory); == \"division\" and $state(ActorDefinition).attr(type); != \"data-model\") or ($state(ActorDefinition).attr(originalCategory); == \"component\" and $state(ActorDefinition).attr(componentType); != \"data-model\")"
                         },
                         "renderFields": {
                              "renderStatement": "$this.attr(renderCheckbox);",
                              "renderFalseStatementListView": "($state(ActorDefinition).attr(type); == \"list-view\" or $state(ActorDefinition).attr(componentType); == \"list-view\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementQueueView": "($state(ActorDefinition).attr(type); == \"queue-view\" or $state(ActorDefinition).attr(componentType); == \"queue-view\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementCardView": "($state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(componentType); == \"card-view\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementDetailView": "($state(ActorDefinition).attr(type); == \"detail-view\" or $state(ActorDefinition).attr(componentType); == \"detail-view\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementPanel": "($state(ActorDefinition).attr(type); == \"base-panel\" or $state(ActorDefinition).attr(componentType); == \"base-panel\") and (not $this.attr(renderCheckbox);)",
                              "editableStatement": "$this.attr(editableCheckbox);",
                              "editableFalseStatementListView": "($state(ActorDefinition).attr(type); == \"list-view\" or $state(ActorDefinition).attr(componentType); == \"list-view\") and (not $this.attr(editableCheckbox);)",
                              "editableFalseStatementQueueView": "($state(ActorDefinition).attr(type); == \"queue-view\" or $state(ActorDefinition).attr(componentType); == \"queue-view\") and (not $this.attr(editableCheckbox);)",
                              "editableFalseStatementCardView": "($state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(componentType); == \"card-view\") and (not $this.attr(editableCheckbox);)",
                              "editableFalseStatementDetailView": "($state(ActorDefinition).attr(type); == \"detail-view\" or $state(ActorDefinition).attr(componentType); == \"detail-view\") and (not $this.attr(editableCheckbox);)",
                              "editableFalseStatementPanel": "($state(ActorDefinition).attr(type); == \"base-panel\" or $state(ActorDefinition).attr(componentType); == \"base-panel\") and (not $this.attr(editableCheckbox);)",
                              "fieldColumns": "($state(ActorDefinition).attr(type); == \"queue-view\" or $state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(type); == \"detail-view\" or $state(ActorDefinition).attr(type); == \"base-panel\" or $state(ActorDefinition).attr(componentType); == \"queue-view\" or $state(ActorDefinition).attr(componentType); == \"card-view\" or $state(ActorDefinition).attr(componentType); == \"detail-view\" or $state(ActorDefinition).attr(componentType); == \"base-panel\") and $state(StageBarData).attr(styleTag); == \"mint\"",
                              "columns": "($state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(componentType); == \"card-view\") and $state(StageBarData).attr(styleTag); == \"mint\""
                         },
                         "editableFields": {
                              "renderFalseStatementListView": false,
                              "renderFalseStatementQueueView": false,
                              "renderFalseStatementCardView": false,
                              "renderFalseStatementDetailView": false,
                              "renderFalseStatementPanel": false,
                              "editableFalseStatementListView": false,
                              "editableFalseStatementQueueView": false,
                              "editableFalseStatementCardView": false,
                              "editableFalseStatementDetailView": false,
                              "editableFalseStatementPanel": false
                         },
                         "noLabelFields": [
                              "renderStatement",
                              "renderFalseStatementListView",
                              "renderFalseStatementQueueView",
                              "renderFalseStatementCardView",
                              "renderFalseStatementDetailView",
                              "renderFalseStatementPanel",
                              "editableStatement",
                              "editableFalseStatementListView",
                              "editableFalseStatementQueueView",
                              "editableFalseStatementCardView",
                              "editableFalseStatementDetailView",
                              "editableFalseStatementPanel"
                         ],
                         "textAfter": "First define data query and then come back for more configuration options.",
                         "renderText": {
                              "textAfter": "($state(ActorDefinition).attr(originalCategory); == \"division\" and $state(ActorDefinition).attr(type); != \"data-model\") or ($state(ActorDefinition).attr(originalCategory); == \"component\" and $state(ActorDefinition).attr(componentType); != \"data-model\")"
                         }
                    }
               },
               "ContentConfiguration": {
                    "category": "component",
                    "type": "detail-view",
                    "property": {
                         "structureName": "portal_editor_content_configuration",
                         "dataObject": "$editModeContentConfiguration;"
                    },
                    "appearance": {
                         "render": "$state(ActorDefinition).attr(originalCategory); == \"content\" or $state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(type); == \"page-include\"",
                         "editable": true,
                         "renderFields": {
                              "renderStatement": "$this.attr(renderCheckbox);",
                              "renderFalseStatementStaticContent": "($state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(contentType); == \"static-content\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementPageInclude": "($state(ActorDefinition).attr(type); == \"page-include\" or $state(ActorDefinition).attr(contentType); == \"page-include\") and (not $this.attr(renderCheckbox);)",
                              "contentName": "$state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(contentType); == \"static-content\"",
                              "content": "$state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(contentType); == \"static-content\"",
                              "url": "$state(ActorDefinition).attr(type); == \"page-include\" or $state(ActorDefinition).attr(contentType); == \"page-include\"",
                              "ariaLabel": "$state(ActorDefinition).attr(type); == \"page-include\" or $state(ActorDefinition).attr(contentType); == \"page-include\" or $state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(contentType); == \"static-content\""
                         },
                         "editableFields": {
                              "renderFalseStatementStaticContent": false,
                              "renderFalseStatementPageInclude": false
                         },
                         "noLabelFields": [
                              "renderStatement",
                              "renderFalseStatementStaticContent",
                              "renderFalseStatementPageInclude"
                         ]
                    }
               },
               "ContainerConfiguration": {
                    "category": "component",
                    "type": "detail-view",
                    "property": {
                         "structureName": "portal_editor_container_configuration",
                         "dataObject": "$editModeContainerConfiguration;"
                    },
                    "appearance": {
                         "render": "$state(ActorDefinition).attr(originalCategory); == \"container\" or $state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(type); == \"accordion\"",
                         "editable": true,
                         "renderFields": {
                              "renderStatement": "$this.attr(renderCheckbox);",
                              "renderFalseStatementTabs": "($state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementSteps": "($state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(containerType); == \"steps\") and (not $this.attr(renderCheckbox);)",
                              "renderFalseStatementAccordion": "($state(ActorDefinition).attr(type); == \"accordion\" or $state(ActorDefinition).attr(containerType); == \"accordion\") and (not $this.attr(renderCheckbox);)",
                              "style": "$state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\" or $state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(containerType); == \"steps\"",
                              "titleOrientation": "$state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\" or $state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(containerType); == \"steps\""
                         },
                         "editableFields": {
                              "renderFalseStatementTabs": false,
                              "renderFalseStatementSteps": false,
                              "renderFalseStatementAccordion": false
                         },
                         "noLabelFields": [
                              "renderStatement",
                              "renderFalseStatementTabs",
                              "renderFalseStatementSteps",
                              "renderFalseStatementAccordion"
                         ]
                    }
               },
               "ContainerChildren": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_container_children",
                         "dataObject": "$editModeContainerChildren;"
                    },
                    "appearance": {
                         "render": "$state(ActorDefinition).attr(originalCategory); == \"container\" or $state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(type); == \"accordion\"",
                         "editable": true,
                         "new": true,
                         "noLabelFields": [
                              "title",
                              "subTitle",
                              "actorName",
                              "actorTypeListView",
                              "actorTypeQueueView",
                              "actorTypeCardView",
                              "actorTypeDetailView",
                              "actorTypePanel",
                              "actorTypeDataModel",
                              "actorTypeStaticContent",
                              "actorTypePageInclude",
                              "actorTypeTabs",
                              "actorTypeSteps",
                              "actorTypeAccordion",
                              "containerName",
                              "render",
                              "enable"
                         ],
                         "renderFields": {
                              "actorType": false,
                              "actorTypeListView": "$this.attr(actorType); == \"list-view\"",
                              "actorTypeQueueView": "$this.attr(actorType); == \"queue-view\"",
                              "actorTypeCardView": "$this.attr(actorType); == \"card-view\"",
                              "actorTypeDetailView": "$this.attr(actorType); == \"detail-view\"",
                              "actorTypePanel": "$this.attr(actorType); == \"base-panel\"",
                              "actorTypeDataModel": "$this.attr(actorType); == \"data-model\"",
                              "actorTypeStaticContent": "$this.attr(actorType); == \"static-content\"",
                              "actorTypePageInclude": "$this.attr(actorType); == \"page-include\"",
                              "actorTypeTabs": "$this.attr(actorType); == \"tabs\"",
                              "actorTypeSteps": "$this.attr(actorType); == \"steps\"",
                              "actorTypeAccordion": "$this.attr(actorType); == \"accordion\"",
                              "render": "$this.attr(renderContainerCheckbox);",
                              "enableCheckbox": "$state(ActorDefinition).attr(containerType);== \"tabs\" or $state(ActorDefinition).attr(containerType); == \"accordion\" or $state(ActorDefinition).attr(type);== \"tabs\" or $state(ActorDefinition).attr(type); == \"accordion\"",
                              "enable": "$this.attr(enableCheckbox);",
                              "containerName": "$this.attr(nameCheckbox);",
                              "renderStatementTab": "($state(ActorDefinition).attr(containerType); == \"tabs\" or $state(ActorDefinition).attr(type); == \"tabs\") and ($this.attr(renderContainerCheckbox); == false or $this.attr(renderContainerCheckbox); == undefined)",
                              "enableStatementTab": "($state(ActorDefinition).attr(containerType); == \"tabs\" or $state(ActorDefinition).attr(type); == \"tabs\") and ($this.attr(enableCheckbox); == false or $this.attr(enableCheckbox); == undefined)",
                              "enableStatementAccordion": "($state(ActorDefinition).attr(containerType);== \"accordion\" or $state(ActorDefinition).attr(type);== \"accordion\") and ($this.attr(enableCheckbox); == false or $this.attr(enableCheckbox); == undefined)",
                              "renderStatementStep": "($state(ActorDefinition).attr(containerType); == \"steps\" or $state(ActorDefinition).attr(type); == \"steps\") and ($this.attr(renderContainerCheckbox); == false or $this.attr(renderContainerCheckbox); == undefined)",
                              "renderStatementAccordion": "($state(ActorDefinition).attr(containerType); == \"accordion\" or $state(ActorDefinition).attr(type);== \"accordion\") and ($this.attr(renderContainerCheckbox); == false or $this.attr(renderContainerCheckbox); == undefined)"
                         },
                         "editableFields": {
                              "actorName": "$this.attr(actorType); == \"\" or $this.attr(actorType); == undefined or $this.attr(actorType); == null",
                              "actorTypeListView": false,
                              "actorTypeQueueView": false,
                              "actorTypeCardView": false,
                              "actorTypeDetailView": false,
                              "actorTypePanel": false,
                              "actorTypeDataModel": false,
                              "actorTypeStaticContent": false,
                              "actorTypePageInclude": false,
                              "actorTypeTabs": false,
                              "actorTypeSteps": false,
                              "actorTypeAccordion": false,
                              "renderStatementTab": false,
                              "renderStatementStep": false,
                              "renderStatementAccordion": false,
                              "enableStatementTab": false,
                              "enableStatementAccordion": false
                         },
                         "expansionTop": "normal",
                         "title": "Titles and Child Actors"
                    },
                    "componentActions": [
                         {
                              "name": "add",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-plus-circle\"></span>",
                                   "position": "top-right"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "cruds": [
                                        {
                                             "method": "insert",
                                             "source": "$state(ContainerChildren);",
                                             "options": {
                                                  "structureName": "portal_editor_container_children"
                                             }
                                        }
                                   ]
                              }
                         }
                    ],
                    "recordActions": [
                         {
                              "name": "remove",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-times\"></span>",
                                   "position": "top-right"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "cruds": [
                                        {
                                             "method": "remove",
                                             "source": "$state(ContainerChildren);",
                                             "value": {
                                                  "id": "$this.attr(id);"
                                             }
                                        }
                                   ]
                              }
                         },
                         {
                              "name": "searchActor",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-search\"></span>",
                                   "render": "$this.attr(actorType); == \"\" or $this.attr(actorType); == undefined or $this.attr(actorType); == null",
                                   "position": "top-right"
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$openPopup;",
                                             "value": [
                                                  "ActorPopup",
                                                  "ContainerChildren",
                                                  [
                                                       "actorName",
                                                       "actorType"
                                                  ]
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "DivisionBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(divisionBackgroundBorders);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"division\" and (not $state(ActorDefinition).attr(isLayout);))",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "DivisionBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "ListViewBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(componentBackgroundBorders, listHeader, content);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"list-view\" or $state(ActorDefinition).attr(componentType); == \"list-view\")",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "ListViewBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "ComponentBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(componentBackgroundBorders, label, content);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"queue-view\" or $state(ActorDefinition).attr(type); == \"card-view\" or $state(ActorDefinition).attr(type); == \"detail-view\" or $state(ActorDefinition).attr(type); == \"base-panel\" or $state(ActorDefinition).attr(componentType); == \"queue-view\" or $state(ActorDefinition).attr(componentType); == \"card-view\" or $state(ActorDefinition).attr(componentType); == \"detail-view\" or $state(ActorDefinition).attr(componentType); == \"base-panel\")",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "ComponentBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "StaticContentBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(contentBackgroundBorders, staticContent);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"static-content\" or $state(ActorDefinition).attr(contentType); == \"static-content\")",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "StaticContentBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "TabsPrimaryHorizontalBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(containerBackgroundBorders, tabPrimaryHorizontal, tabPrimaryHorizontalCurrent, tabPrimaryHorizontalDisabled);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\") and $state(ContainerConfiguration).attr(style); == \"primary\" and $state(ContainerConfiguration).attr(titleOrientation); == \"horizontal\"",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "TabsPrimaryHorizontalBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "TabsPrimaryVerticalBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(containerBackgroundBorders, tabPrimaryVertical, tabPrimaryVerticalCurrent, tabPrimaryVerticalDisabled);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\") and $state(ContainerConfiguration).attr(style); == \"primary\" and $state(ContainerConfiguration).attr(titleOrientation); == \"vertical\"",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "TabsPrimaryVerticalBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "TabsSecondaryBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(containerBackgroundBorders, tabSecondary, tabSecondaryCurrent, tabSecondaryDisabled);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\") and $state(ContainerConfiguration).attr(style); == \"secondary\"",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "TabsSecondaryBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "TabsSecondaryVerticalBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(containerBackgroundBorders, tabSecondaryVertical, tabSecondaryVerticalCurrent);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"tabs\" or $state(ActorDefinition).attr(containerType); == \"tabs\") and $state(ContainerConfiguration).attr(style); == \"secondary\" and $state(ContainerConfiguration).attr(titleOrientation); == \"vertical\"",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "TabsSecondaryVerticalBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "StepsBranding": {
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_text_color_queue_view",
                         "dataObject": "$editModeBrandingActor(containerBackgroundBorders, step, stepCurrent);"
                    },
                    "appearance": {
                         "editable": true,
                         "render": "$state(StageBarData).attr(styleTag); == \"mint\" and ($state(ActorDefinition).attr(type); == \"steps\" or $state(ActorDefinition).attr(containerType); == \"steps\")",
                         "recordClasses": "$this.attr(overriding);",
                         "renderFields": {
                              "categoryName": false,
                              "attributeId": false,
                              "overriding": false,
                              "textColor": "$this.attr(textColor); != undefined and $this.attr(textColor); != null",
                              "backgroundColor": "$this.attr(backgroundColor); != undefined and $this.attr(backgroundColor); != null",
                              "borderPosition": "$this.attr(borderPosition); != undefined and $this.attr(borderPosition); != null and $this.attr(borderColor);[1] == \"#\"",
                              "borderColor": "$this.attr(borderColor); != undefined and $this.attr(borderColor); != null",
                              "fontFamily": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "fontSize": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isBold": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null",
                              "isItalic": "$this.attr(fontFamily); != undefined and $this.attr(fontFamily); != null"
                         },
                         "editableFields": {
                              "attributeName": false
                         },
                         "renderSections": {
                              "backgroundBorders": "$this.attr(borderTopWidth); != undefined or $this.attr(borderRightWidth); != undefined or $this.attr(borderBottomWidth); != undefined or $this.attr(borderLeftWidth); != undefined"
                         },
                         "noLabelFields": [
                              "attributeName",
                              "fontFamily",
                              "fontSize",
                              "isBold",
                              "isItalic",
                              "borderPosition"
                         ],
                         "fieldStyle": {
                              "type": "side-by-side",
                              "labelWidth": "70px",
                              "valueWidth": "calc(100% - 70px)"
                         }
                    },
                    "recordActions": [
                         {
                              "name": "reset",
                              "actionType": "normal",
                              "appearance": {
                                   "label": "<span class=\"fa fa-undo\"></span>",
                                   "position": "top-right",
                                   "render": "$this.attr(overriding); == \"overriding\""
                              },
                              "handler": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$resetActorBranding;",
                                             "value": [
                                                  "StepsBranding"
                                             ]
                                        }
                                   ]
                              }
                         }
                    ]
               },
               "ActorPopup": {
                    "mode": "popup",
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_actor_definition_actor_popup",
                         "dataObject": "$editModeActorDefinitionActors;"
                    },
                    "appearance": {
                         "transient": true,
                         "noLabelFields": [
                              "actorName",
                              "actorTypeListView",
                              "actorTypeQueueView",
                              "actorTypeCardView",
                              "actorTypeDetailView",
                              "actorTypePanel",
                              "actorTypeDataModel",
                              "actorTypeStaticContent",
                              "actorTypePageInclude",
                              "actorTypeTabs",
                              "actorTypeSteps",
                              "actorTypeAccordion"
                         ],
                         "renderFields": {
                              "actorType": false,
                              "actorTypeListView": "$this.attr(actorType); == \"list-view\"",
                              "actorTypeQueueView": "$this.attr(actorType); == \"queue-view\"",
                              "actorTypeCardView": "$this.attr(actorType); == \"card-view\"",
                              "actorTypeDetailView": "$this.attr(actorType); == \"detail-view\"",
                              "actorTypePanel": "$this.attr(actorType); == \"base-panel\"",
                              "actorTypeDataModel": "$this.attr(actorType); == \"data-model\"",
                              "actorTypeStaticContent": "$this.attr(actorType); == \"static-content\"",
                              "actorTypePageInclude": "$this.attr(actorType); == \"page-include\"",
                              "actorTypeTabs": "$this.attr(actorType); == \"tabs\"",
                              "actorTypeSteps": "$this.attr(actorType); == \"steps\"",
                              "actorTypeAccordion": "$this.attr(actorType); == \"accordion\""
                         },
                         "popup": {
                              "direction": "bottom",
                              "anchor": "cursor",
                              "width": 300,
                              "height": 300,
                              "margin": 20,
                              "borderColor": "#767676",
                              "backgroundColor": "#ffffff",
                              "overflowY": "auto"
                         },
                         "title": "Existing Actors",
                         "blankMessage": "There is no actor that has been specified.",
                         "expansionTop": "normal"
                    },
                    "generalHandlers": {
                         "clickRecord": {
                              "navigation": "portal_editor_actor_definition_panel",
                              "executions": [
                                   {
                                        "name": "$applyPopup;",
                                        "value": [
                                             "ActorPopup",
                                             [
                                                  "actorName",
                                                  "actorType"
                                             ]
                                        ]
                                   },
                                   {
                                        "name": "$resetPopupLocation;",
                                        "value": [
                                             "ActorPopup"
                                        ]
                                   }
                              ]
                         }
                    }
               },
               "ColorPalettePopup": {
                    "mode": "popup",
                    "category": "component",
                    "type": "base-panel",
                    "property": {
                         "structureName": "portal_editor_branding_color_palette_popup",
                         "dataObject": "$editModeBrandingColorPalette;"
                    },
                    "appearance": {
                         "editable": true,
                         "transient": true,
                         "noLabelFields": [
                              "currentColor"
                         ],
                         "popup": {
                              "direction": "bottom",
                              "anchor": "cursor",
                              "width": 234,
                              "height": 308,
                              "margin": 20,
                              "borderColor": "#767676",
                              "backgroundColor": "#ffffff"
                         }
                    },
                    "generalHandlers": {
                         "fieldChange": {
                              "currentColor": {
                                   "navigation": "portal_editor_actor_definition_panel",
                                   "executions": [
                                        {
                                             "name": "$updateBrandingColor;",
                                             "value": [
                                                  "ColorPalettePopup"
                                             ]
                                        }
                                   ]
                              }
                         }
                    }
               },
               "FontFamilyPopup": {
                    "mode": "popup",
                    "category": "component",
                    "type": "queue-view",
                    "property": {
                         "structureName": "portal_editor_branding_font_family_popup",
                         "dataObject": "$editModeBrandingFontFamily;"
                    },
                    "appearance": {
                         "transient": true,
                         "groupBy": {
                              "field": "categoryName",
                              "title": "$this.attr(categoryName);"
                         },
                         "renderFields": {
                              "categoryName": "false",
                              "fontFamilyName": "false"
                         },
                         "noLabelFields": [
                              "fontFamilyDisplay"
                         ],
                         "highlight": true,
                         "autoHighlight": {
                              "fontFamilyName": "$interaction.attr(popupDynamic).attr(data);"
                         },
                         "popup": {
                              "direction": "bottom",
                              "anchor": "cursor",
                              "width": 250,
                              "height": 400,
                              "margin": 20,
                              "borderColor": "#767676",
                              "backgroundColor": "#ffffff",
                              "overflowY": "auto"
                         }
                    },
                    "generalHandlers": {
                         "clickRecord": {
                              "navigation": "portal_editor_actor_definition_panel",
                              "executions": [
                                   {
                                        "name": "$updateBrandingFontFamily;",
                                        "value": [
                                             "FontFamilyPopup"
                                        ]
                                   }
                              ]
                         }
                    }
               }
          },
          "settings": {
               "locale": "en-us",
               "currency": "USD",
               "minimumFractionDigits": 2
          },
          "messages": {
               "loadingAnimationText": "<span><span class=\"fa fa-spinner\"></span>Loading...</span>",
               "savingAnimationText": "<span><span class=\"fa fa-spinner\"></span>Saving...</span>",
               "submitAnimationText": "<span><span class=\"fa fa-spinner\"></span>Sending...</span>",
               "loadingFailureText": "<span><span class=\"fa fa-exclamation-triangle\"></span>Fail to load</span>",
               "saveSuccessText": "<span><span class=\"fa fa-check\"></span>Succeed</span>",
               "saveFailureText": "<span><span class=\"fa fa-exclamation-triangle\"></span>Fail to save</span>",
               "submitSuccessText": "<span><span class=\"fa fa-check\"></span>Succeed</span>",
               "submitFailureText": "<span><span class=\"fa fa-exclamation-triangle\"></span>Fail to submit</span>",
               "submitExpirationText": "<span><span class=\"fa fa-exclamation-triangle\"></span>Fail to submit</span>",
               "uploadFailureText": "<span><span class=\"fa fa-exclamation-triangle\"></span>Fail to upload</span>",
               "uploadFileTooLargeError": "<span><span class=\"fa fa-exclamation-triangle\"></span>File too large</span>"
          }
     },
     "clcommon__External_ID__c": "portal_editor_actor_definition_panel",
     "clcommon__Release_Checksum__c": "d4f3ff41387339c30a688c3913378e7c4b0af238b9f275fbcef96f2f126d98fa"
}